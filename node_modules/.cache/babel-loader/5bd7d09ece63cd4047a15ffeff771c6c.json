{"ast":null,"code":"import _classCallCheck from\"/Users/seanjohnson/Desktop/Projects/dev-projects/create-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/seanjohnson/Desktop/Projects/dev-projects/create-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/seanjohnson/Desktop/Projects/dev-projects/create-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/seanjohnson/Desktop/Projects/dev-projects/create-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/seanjohnson/Desktop/Projects/dev-projects/create-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Grid from'@material-ui/core/Grid';import{ValidatorForm,TextValidator}from'react-material-ui-form-validator';import MyButton from'../MyButton';import{env}from'../../config';var Form=/*#__PURE__*/function(_React$Component){_inherits(Form,_React$Component);function Form(){var _getPrototypeOf2;var _this;_classCallCheck(this,Form);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Form)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={formData:{name:'',email:'',message:''},submitted:false,formEmailSent:false};_this.handleChange=function(event){var formData=_this.state.formData;formData[event.target.name]=event.target.value;_this.setState({formData:formData});};_this.handleSubmit=function(event){console.log('onSubmit Triggered');event.preventDefault();// let {\n//   REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n//   REACT_APP_EMAILJS_TEMPLATEID: template,\n//   REACT_APP_EMAILJS_USERID: user,\n// } = env;\n// Move to .env and import\n// const receiverEmail = \"receiver@example.com\"\nvar userId=\"user_BEkLEnTF6bQFSTShemciw\";var templateId=\"template_KhFkHgO5\";var formData=_this.state.formData;var templateParams={\"reply_to\":\"\".concat(formData.email),\"from_name\":\"\".concat(formData.name),\"to_name\":\"Sean Johnson\",\"message_html\":\"\".concat(formData.message)};_this.sendFeedback(templateId,templateParams,userId);_this.setState({submitted:true},function(){setTimeout(function(){return _this.setState({submitted:false});},5000);});};_this.sendFeedback=function(templateId,templateParams,userId){window.emailjs.send('default_service',templateId,templateParams,userId).then(function(response){console.log('res',response);_this.setState({formEmailSent:true});})// Handle errors here however you like\n.catch(function(err){return console.error('Failed to send feedback. Error: ',err);});};return _this;}_createClass(Form,[{key:\"handleCancel\",value:function handleCancel(){this.setState({formData:{name:'',email:'',message:''}});}},{key:\"render\",value:function render(){var _this$state=this.state,formData=_this$state.formData,submitted=_this$state.submitted;return React.createElement(ValidatorForm,{ref:\"form\",onSubmit:this.handleSubmit},React.createElement(Grid,{container:true,item:true,xs:12,sm:8,direction:\"row\"},React.createElement(Grid,{item:true,xs:12,sm:5,style:{marginBottom:15,marginRight:15}},React.createElement(TextValidator,{className:{borderRadius:0},fullWidth:true,label:\"Name\",onChange:this.handleChange,name:\"name\",variant:\"outlined\",value:formData.name,validators:['required'],errorMessages:['Required']})),React.createElement(Grid,{item:true,xs:12,sm:5,style:{marginBottom:15}},React.createElement(TextValidator,{fullWidth:true,label:\"Email\",onChange:this.handleChange,name:\"email\",variant:\"outlined\",value:formData.email,validators:['required','isEmail'],errorMessages:['Required','Email is not valid']})),React.createElement(TextValidator,{fullWidth:true,label:\"Message\",onChange:this.handleChange,multiline:true,rows:5,variant:\"outlined\",name:\"message\",value:formData.message,validators:['required'],errorMessages:['Required'],style:{marginBottom:15}}),React.createElement(MyButton,{type:\"submit\",disabled:submitted,buttonText:submitted&&'Sent!'||!submitted&&'Send'})));}}]);return Form;}(React.Component);export{Form as default};","map":{"version":3,"sources":["/Users/seanjohnson/Desktop/Projects/dev-projects/create-react-app/src/components/Form/Form.js"],"names":["React","Grid","ValidatorForm","TextValidator","MyButton","env","Form","state","formData","name","email","message","submitted","formEmailSent","handleChange","event","target","value","setState","handleSubmit","console","log","preventDefault","userId","templateId","templateParams","sendFeedback","setTimeout","window","emailjs","send","then","response","catch","err","error","marginBottom","marginRight","borderRadius","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nimport MyButton from '../MyButton';\nimport { env } from '../../config';\n\nexport default class Form extends React.Component {\n    state = {\n        formData: {\n            name: '',\n            email: '',\n            message: ''\n        },\n        submitted: false,\n        formEmailSent: false\n    }\n\n    handleChange = (event) => {\n        const { formData } = this.state;\n        formData[event.target.name] = event.target.value;\n        this.setState({ formData });\n    }\n\n    handleSubmit = (event) => {\n      console.log('onSubmit Triggered')\n      event.preventDefault();\n\n      // let {\n      //   REACT_APP_EMAILJS_RECEIVER: receiverEmail,\n      //   REACT_APP_EMAILJS_TEMPLATEID: template,\n      //   REACT_APP_EMAILJS_USERID: user,\n      // } = env;\n\n      // Move to .env and import\n      // const receiverEmail = \"receiver@example.com\"\n      const userId = \"user_BEkLEnTF6bQFSTShemciw\"\n      const templateId = \"template_KhFkHgO5\"\n      const { formData } = this.state\n\n      let templateParams = {\n        \"reply_to\": `${formData.email}`,\n        \"from_name\": `${formData.name}`,\n        \"to_name\": \"Sean Johnson\",\n        \"message_html\": `${formData.message}`\n      }\n      this.sendFeedback(\n        templateId,\n        templateParams,\n        userId\n      );\n      this.setState({ submitted: true }, () => {\n        setTimeout(() => this.setState({ submitted: false }), 5000);\n      });\n    }\n\n    // Note: this is using default_service, which will map to whatever\n    // default email provider you've set in your EmailJS account.\n    sendFeedback = (templateId, templateParams, userId) => {\n      window.emailjs\n      .send('default_service', templateId, templateParams, userId)\n      .then(response => {\n        console.log('res', response)\n        this.setState({\n          formEmailSent: true\n        });\n      })\n      // Handle errors here however you like\n      .catch(err => console.error('Failed to send feedback. Error: ', err));\n    }\n\n\n    handleCancel() {\n      this.setState({\n        formData: {\n          name: '',\n          email: '',\n          message: ''\n        }\n      });\n    }\n\n    render() {\n        const { formData, submitted } = this.state;\n        return (\n            <ValidatorForm\n              ref=\"form\"\n              onSubmit={this.handleSubmit}\n            >\n              <Grid container item xs={12} sm={8} direction=\"row\">\n              <Grid item xs={12} sm={5} style={{ marginBottom: 15, marginRight: 15 }}>\n                <TextValidator\n                  className={{ borderRadius: 0 }}\n                  fullWidth\n                  label=\"Name\"\n                  onChange={this.handleChange}\n                  name=\"name\"\n                  variant=\"outlined\"\n                  value={formData.name}\n                  validators={['required']}\n                  errorMessages={['Required']}\n                />\n              </Grid>\n              <Grid item xs={12} sm={5} style={{ marginBottom: 15 }}>\n                <TextValidator\n                  fullWidth\n                  label=\"Email\"\n                  onChange={this.handleChange}\n                  name=\"email\"\n                  variant=\"outlined\"\n                  value={formData.email}\n                  validators={['required', 'isEmail']}\n                  errorMessages={['Required', 'Email is not valid']}\n                />\n              </Grid>\n              <TextValidator\n                fullWidth\n                label=\"Message\"\n                onChange={this.handleChange}\n                multiline\n                rows={5}\n                variant=\"outlined\"\n                name=\"message\"\n                value={formData.message}\n                validators={['required']}\n                errorMessages={['Required']}\n                style={{ marginBottom: 15 }}\n              />\n              <MyButton\n                type={\"submit\"}\n                disabled={submitted}\n                buttonText={(submitted && 'Sent!') || (!submitted && 'Send')}\n              />\n              </Grid>\n            </ValidatorForm>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}